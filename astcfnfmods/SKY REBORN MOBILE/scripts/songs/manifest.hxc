import funkin.play.PlayState;
import funkin.play.song.Song;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import flixel.FlxSprite;
import funkin.graphics.FunkinSprite;
import funkin.play.PlayStatePlaylist;
import funkin.audio.FunkinSound;
import funkin.play.stage.Stage;
import flixel.FlxG;
import flixel.util.FlxTimer;
import funkin.play.character.CharacterDataParser;
import funkin.play.character.CharacterType;
import funkin.play.components.HealthIcon;
import funkin.play.cutscene.VideoCutscene;
import funkin.play.cutscene.CutsceneType;
import funkin.save.Save;
import funkin.util.MathUtil;

class ManifestSong extends Song {
	


	var hasPlayedIntroCutscene:Bool;
	var whiteNoise = new FunkinSprite((Paths.image('shift/manifest/whiteNoise')), 0x11, 0, 0);
	var bgSprite:FunkinSprite;
	var hasPlayedDramaticCutscene:Bool;
	var hasPlayedEndCredits = false;

	var velocityX:Int = 10;
	var velocityY:Int = 10;

	function new() {
		super('manifest');
		hasPlayedDramaticCutscene = false;
	}


	override function onCountdownStart(event) {
		super.onCountdownStart(event);
		hasPlayedIntroCutscene = false;
		
		/* event.cancel();
			event.stopPropagation();
			PlayState.instance.isInCountdown = true;
			PlayState.instance.startSong(); */
	}

	function onCreate(event:ScriptEvent) {
		super.onCreate(event);
		hasPlayedIntroCutscene = false;

		// cool ass intro
		if (PlayState.instance.currentVariation == 'erect' && hasPlayedDramaticCutscene == false) {
			bgSprite = new FunkinSprite(0, 0);
			bgSprite.makeSolidColor(2000, 2500, 0xFF000000);
			bgSprite.cameras = [PlayState.instance.camCutscene]; // Show over the HUD but below the video.
			bgSprite.zIndex = -10000;
			PlayState.instance.add(bgSprite);
			PlayState.instance.refresh();
		}

		// load the rare alternate skin (when u arent in story mode)
		if (PlayState.instance.currentVariation == 'erect') {
			PlayState.instance.currentStage.getDad().destroy();
			character = CharacterDataParser.fetchCharacter("skymenacing");
			PlayState.instance.currentStage.addCharacter(character, CharacterType.DAD);
			PlayState.instance.currentStage.refresh();
		}
	}

	var timer:Int = 0;


	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

		if (!hasPlayedIntroCutscene && PlayStatePlaylist.isStoryMode) {
			trace('Pausing countdown to play cutscene.');

			hasPlayedIntroCutscene = true;

			event.cancel(); // CANCEL THE COUNTDOWNN

			manifestIntro();
		}
	}

	function manifestIntro() {
		var cutsceneSfx:FunkinSound;
		cutsceneSfx = FunkinSound.load(Paths.sound("manifestSound"), true, true);
		cutsceneSfx.volume = 0;

		var gfPos:Array<Float> = [
			PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.x,
			PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.y
		];
		PlayState.instance.tweenCameraToPosition(gfPos[0], gfPos[1], 0.01, FlxEase.quadInOut);
		PlayState.instance.tweenCameraZoom(2, 0.01, true, FlxEase.expoOut);
		var bgSprite = new FunkinSprite(0, 0);
		bgSprite.makeSolidColor(2000, 2500, 0xFF000000);
		bgSprite.cameras = [PlayState.instance.camCutscene]; // Show over the HUD but below the video.
		// this
		bgSprite.zIndex = 10000;
		bgSprite.alpha = 1;

		PlayState.instance.add(bgSprite);
		new FlxTimer().start(1, function(tmr) {
			PlayState.instance.tweenCameraZoom(0.4, 8, true, FlxEase.quadOut);
			PlayState.instance.tweenCameraToPosition(gfPos[0], gfPos[1] + 200, 6, FlxEase.cubeOut);
			FlxTween.tween(bgSprite, {alpha: 0}, 8);
			cutsceneSfx.play(true);
			FlxTween.tween(cutsceneSfx, {volume: 1}, 2);
		});

		new FlxTimer().start(7, function(tmr) {
			FlxTween.tween(cutsceneSfx, {volume: 0}, 2);
		});

		new FlxTimer().start(9, function(tmr) {
			PlayState.instance.startCountdown();
		});
	}

	override function onBeatHit(event) {
		super.onBeatHit(event);
		curBeat = event.beat;
		if (PlayState.instance.currentVariation == 'erect') {
			switch (event.beat) {
				// intro stuff
				case 0:
					var gfPos:Array<Float> = [
						PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.x,
						PlayState.instance.currentStage.getGirlfriend().cameraFocusPoint.y
					];
					PlayState.instance.tweenCameraZoom(2, 0.01, true, FlxEase.quadInOut);

					PlayState.instance.tweenCameraToPosition(gfPos[0], gfPos[1], 0);
					hasPlayedDramaticCutscene = true;
				case 1:
					FlxTween.tween(bgSprite, {alpha: 0}, 15);
					PlayState.instance.tweenCameraZoom(0.5, 14, true, FlxEase.quadInOut);
				case 1:
					FlxTween.tween(bgSprite, {alpha: 0}, 15);
					PlayState.instance.tweenCameraZoom(0.5, 14, true, FlxEase.quadInOut);
			}
		}
	}

	override function onSongEnd(event:CountdownScriptEvent):Void {
		super.onSongEnd(event);

		if (!PlayStatePlaylist.isStoryMode)
			hasPlayedEndCredits = true;

		if (!hasPlayedEndCredits) {
			hasPlayedEndCredits = true;
			event.cancel();
			VideoCutscene.play(Paths.videos('skyEndCredits'), CutsceneType.ENDING);
		} else {
			hasPlayedEndCredits = false;
		}
	}
}