import flixel.FlxG;
import funkin.play.PlayState;
import funkin.play.event.SongEvent;
import funkin.modding.module.Module;
import funkin.data.event.SongEventSchema;

class idleAnimationSuffixEvent extends SongEvent {

    var hitNoteScriptEvent:HitNoteScriptEvent;

    function new() {
        super('idleAnimationSuffixEvent');
    }

    public override function getTitle():String {
        return 'Idle Animation Suffix';
    }

    public override function getEventSchema() {
        return [
            {
                name: 'character',
                title: 'Character',
                type: 'enum',
                defaultValue: 'bf',
                keys: [
                    "Boyfriend" => 'bf',
                    "Girlfriend" => 'gf',
                    "Dad" => 'dad'
                ]
            },
            {
                name: 'suffix',
                title: 'Suffix',
                type: 'string',
                defaultValue: '-alt',
            },
            {
                name: 'alternate',
                title: 'Dance L/R',
                type: 'bool',
                defaultValue: 'false',
            }
        ];
    }

    function onUpdate(){
        super.onUpdate();
        trace(data.value.suffix);
    }

    public override function handleEvent(data):Void {
        if (PlayState.instance == null || PlayState.instance.currentStage == null) return;
		if (PlayState.instance.isMinimalMode) return;
        switch(data.value.character){
            case 'bf':
                // Sets the Idle Suffix
                PlayState.instance.currentStage.getBoyfriend().idleSuffix = data.value.suffix;
                PlayState.instance.currentStage.getBoyfriend().shouldAlternate = data.value.alternate;
            case 'gf':
                // Sets the Idle Suffix
                PlayState.instance.currentStage.getGirlfriend().idleSuffix = data.value.suffix;
                PlayState.instance.currentStage.getGirlfriend().shouldAlternate = data.value.alternate;
            case 'dad':
                // Sets the Idle Suffix
                PlayState.instance.currentStage.getDad().idleSuffix = data.value.suffix;
                PlayState.instance.currentStage.getDad().shouldAlternate = data.value.alternate;
        }
    }
}

class AnimationRest extends Module {
    override function onSongRetry(event){
        if (PlayState.instance == null || PlayState.instance.currentStage == null) return;
        if (PlayState.instance.isMinimalMode) return;
        super.onSongRetry(event);
    
        PlayState.instance.currentStage.getBoyfriend().idleSuffix = "";
        PlayState.instance.currentStage.getGirlfriend().idleSuffix = "";
        PlayState.instance.currentStage.getDad().idleSuffix = "";
    }
 }